{"version":3,"file":"static/webpack/static\\development\\pages\\our-approach.js.9c9420acee3de52a9023.hot-update.js","sources":["webpack:///./components/card-animated.js","webpack:///./components/card-dark-animated.js","webpack:///./pages/our-approach.js"],"sourcesContent":["\r\nclass AnimatedCard extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {orderNumber: props.order};\r\n    }\r\n\r\n    componentDidMount() {\r\n        let options = {\r\n            threshold: .5\r\n        }\r\n        let target = document.querySelector(`#${this.props.id}`);\r\n        if (this.state.orderNumber > 0) {\r\n            let clName = `reveal-${this.state.orderNumber}`;\r\n            target.classList.add(clName);\r\n        }\r\n        function callback(entries) {\r\n            entries.forEach((entry, index) => {\r\n                if (entry.isIntersecting) {\r\n                    entry.target.classList.add(\"reveal\");\r\n                    Array.from(entry.target.children).forEach(cur => cur.classList.add('reveal'));\r\n                }\r\n            });\r\n        }\r\n        let observer = new IntersectionObserver(callback, options);\r\n        observer.observe(target);\r\n    }\r\n\r\n    render() {\r\n        const listItems = this.props.listItems.map((cur, index) => {\r\n            return <li className=\"list-group-item\" key={`list-item-${index}`}>{cur}</li>;\r\n        });\r\n        return (\r\n            <div id={this.props.id} className=\"shadow card\" style={{marginBottom: '40px'}}>\r\n                <div className=\"card-header text-center\">\r\n                    <h4>{this.props.title}</h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {listItems}\r\n                    </ul>\r\n                </div>\r\n                <style jsx>{`\r\n                    .card {\r\n                        opacity: 0;\r\n                    }\r\n                    .reveal-one {\r\n                        animation-delay: .8s;\r\n                    }\r\n                    .reveal-two {\r\n                        animation-delay: 1.6s;\r\n                    }\r\n                    .reveal-three {\r\n                        animation-delay: 2.4s;\r\n                    }\r\n                    .reveal {\r\n                        animation-name: grow;\r\n                        animation-duration: .8s;\r\n                        animation-timing-function: ease-in-out;\r\n                        transform-origin: center;\r\n                        animation-fill-mode: forwards;\r\n                    }\r\n                    @keyframes grow {\r\n                        0% {\r\n                            opacity: 0;\r\n                            transform: scale(.9, .9);\r\n                        }\r\n                        100% {\r\n                            opacity: 1;\r\n                            transform: scale(1, 1);\r\n                        }\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnimatedCard;","\r\nclass AnimatedCardDark extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {orderNumber: props.order};\r\n    }\r\n\r\n    componentDidMount() {\r\n        let options = {\r\n            threshold: .5\r\n        }\r\n        let target = document.querySelector(`#${this.props.id}`);\r\n        if (this.state.orderNumber > 0) {\r\n            let clName = `reveal-${this.state.orderNumber}`;\r\n            target.classList.add(clName);\r\n        }\r\n        function callback(entries) {\r\n            entries.forEach((entry, index) => {\r\n                if (entry.isIntersecting) {\r\n                    entry.target.classList.add(\"reveal\");\r\n                    Array.from(entry.target.children).forEach(cur => cur.classList.add('reveal'));\r\n                }\r\n            });\r\n        }\r\n        let observer = new IntersectionObserver(callback, options);\r\n        observer.observe(target);\r\n    }\r\n\r\n    render() {\r\n        const listItems = this.props.listItems.map((cur, index) => {\r\n            return <li className=\"list-group-item bg-dark\" key={`list-item-${index}`}>{cur}</li>;\r\n        });\r\n        return (\r\n            <div id={this.props.id} className=\"shadow card bg-dark text-white\" style={{marginBottom: '40px'}}>\r\n                <div className=\"card-header text-center\" style={{borderBottomColor: '#ffffff20'}}>\r\n                    <h4>{this.props.title}</h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {listItems}\r\n                    </ul>\r\n                </div>\r\n                <style jsx>{`\r\n                    .list-group-item.bg-dark { \r\n                        border-color: #ffffff20; \r\n                    }\r\n                    .card {\r\n                        opacity: 0;\r\n                    }\r\n                    .reveal-one {\r\n                        animation-delay: 1s;\r\n                    }\r\n                    .reveal-two {\r\n                        animation-delay: 1.6s;\r\n                    }\r\n                    .reveal-three {\r\n                        animation-delay: 2.4s;\r\n                    }\r\n                    .reveal {\r\n                        animation-name: grow;\r\n                        animation-duration: .8s;\r\n                        animation-timing-function: ease-in-out;\r\n                        transform-origin: center;\r\n                        animation-fill-mode: forwards;\r\n                    }\r\n                    @keyframes grow {\r\n                        0% {\r\n                            opacity: 0;\r\n                            transform: scale(.9, .9);\r\n                        }\r\n                        100% {\r\n                            opacity: 1;\r\n                            transform: scale(1, 1);\r\n                        }\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnimatedCardDark;","import Layout from '../components/layout';\r\nimport Head from 'next/head';\r\nimport Page from '../components/page';\r\nimport AnimatedCard from '../components/card-animated';\r\nimport AnimatedCardDark from '../components/card-dark-animated';\r\n\r\nconst OurApproach = () => (\r\n    <Layout curPage='Home'>\r\n        <Head>\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"></meta>\r\n            <title>Our Approach | Wyvern Realty Group</title>\r\n            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossOrigin=\"anonymous\"></link>\r\n            <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.1/css/all.css\" integrity=\"sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf\" crossOrigin=\"anonymous\"></link>\r\n        </Head>\r\n        <div className=\"wrapper\" style={{backgroundColor: 'white', paddingBottom: '80px'}}>\r\n            <Page>\r\n                <h1 className=\"display-4 mt-5\">Our Services</h1>\r\n                <hr />\r\n                <h4 className=\"font-weight-light font-italic\">Comprehensive Home Buying And Selling Operations</h4>\r\n                <div className=\"container\" style={{marginTop: '60px'}}>\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-lg-5 col-md-6 card-col\">\r\n                            <AnimatedCardDark \r\n                                id={'card-one'}\r\n                                title={'Selling'}\r\n                                order={0}\r\n                                listItems={['Document Management', 'Market Analysis', 'MLS Listing', 'Open Houses', 'Advertising']}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-5 col-md-6 card-col\">\r\n                            <AnimatedCard \r\n                                id={'card-two'}\r\n                                title={'Buying'}\r\n                                order={1}\r\n                                listItems={['Document Management', 'House Searches', 'Consulting Hours', 'Home Showings', 'Access to Lenders']}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Page>\r\n        </div>\r\n        <style jsx>{`\r\n            .card-col {\r\n                transition: transform .2s;\r\n            }\r\n            .card-col:hover {\r\n                transform: scale(1.05, 1.05);\r\n            }\r\n        `}</style>\r\n    </Layout>\r\n)\r\n\r\nexport default OurApproach;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AA0CA;;;;AA3EA;AACA;AA6EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AA6CA;;;;AA9EA;AACA;AAgFA;;;;;;;;;;;;;;;;;;;;;;;;;;AClvBA;AAAA;AAAA;AADA;AACA;AA6CA;;;;A","sourceRoot":""}