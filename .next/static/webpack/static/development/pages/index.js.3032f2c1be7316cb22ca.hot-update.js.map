{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.3032f2c1be7316cb22ca.hot-update.js","sources":["webpack:///./components/card-animated.js"],"sourcesContent":["\r\nclass AnimatedCard extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let options = {\r\n            threshold: .75\r\n        }\r\n        let target = document.querySelector(`#${this.props.id}`);\r\n        function callback(entries) {\r\n            entries.forEach((entry, index) => {\r\n                if (entry.isIntersecting) {\r\n                    entry.target.classList.add(\"reveal\");\r\n                    Array.from(entry.target.children).forEach(cur => cur.classList.add('reveal'));\r\n                }\r\n            });\r\n        }\r\n        let observer = new IntersectionObserver(callback, options);\r\n        observer.observe(target);\r\n    }\r\n\r\n    render() {\r\n        const listItems = this.props.listItems.map((cur, index) => {\r\n            return <li className=\"list-group-item\" key={`list-item-${index}`}>{cur}</li>;\r\n        });\r\n        return (\r\n            <div id={this.props.id} className=\"shadow card\" style={{marginBottom: '40px'}}>\r\n                <div className=\"card-header text-center\">\r\n                    <h4>{this.props.title}</h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {listItems}\r\n                    </ul>\r\n                </div>\r\n                <style jsx>{`\r\n                    .card {\r\n                        opacity: 0;\r\n                    }\r\n                    .reveal {\r\n                        animation-name: grow;\r\n                        animation-duration: .8s;\r\n                        animation-timing-function: ease-in-out;\r\n                        transform-origin: center;\r\n                        animation-fill-mode-forwards;\r\n                    }\r\n                    @keyframes grow {\r\n                        0% {\r\n                            opacity: 0;\r\n                            transform: scale(.9, .9);\r\n                        }\r\n                        100% {\r\n                            opacity: 1;\r\n                            transform: scale(1, 1);\r\n                        }\r\n                    }\r\n                `}</style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AnimatedCard;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAiCA;;;;AAzDA;AACA;AA2DA;;;;A","sourceRoot":""}